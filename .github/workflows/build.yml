name: Build Release Packages

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release version (e.g. v1.0.0)'
        required: true
      server_version:
        description: 'XMLUI test server version to include (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  create-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux-amd64
            server_binary: xmlui-test-server-linux-amd64.tar.gz
          - platform: macos-intel
            server_binary: xmlui-test-server-macos-intel.tar.gz
          - platform: macos-arm64
            server_binary: xmlui-test-server-macos-arm64.tar.gz
          - platform: windows-amd64
            server_binary: xmlui-test-server-windows-amd64.zip

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create temp directory
        run: mkdir -p ./tmp/${{ matrix.platform }}

      - name: Download server binary
        run: |
          curl -L -o ./tmp/${{ matrix.server_binary }} \
            "https://github.com/JonUdell/xmlui-test-server/releases/download/${{ github.event.inputs.server_version }}/${{ matrix.server_binary }}"

      - name: Prepare package directory
        run: |
          mkdir -p ./dist/xmlui-invoice
          rsync -a --exclude='.git' --exclude='.github' --exclude='workflows' --exclude='tmp' --exclude='dist' ./ ./dist/xmlui-invoice/

      - name: Extract server binary
        run: |
          mkdir -p ./tmp/${{ matrix.platform }}
          if [[ "${{ matrix.server_binary }}" == *.zip ]]; then
            unzip ./tmp/${{ matrix.server_binary }} -d ./tmp/${{ matrix.platform }}
          else
            tar -xzf ./tmp/${{ matrix.server_binary }} -C ./tmp/${{ matrix.platform }}
          fi

          if [[ "${{ matrix.platform }}" == "windows-amd64" ]]; then
            mv ./tmp/${{ matrix.platform }}/xmlui-test-server*.exe ./dist/xmlui-invoice/xmlui-test-server.exe
          else
            find ./tmp/${{ matrix.platform }} -name "xmlui-test-server" -type f -exec mv {} ./dist/xmlui-invoice/xmlui-test-server \;
          fi

      - name: Set execute permissions for Unix binaries
        if: ${{ matrix.platform != 'windows-amd64' }}
        run: |
          chmod +x ./dist/xmlui-invoice/xmlui-test-server
          chmod +x ./dist/xmlui-invoice/start.sh

      - name: Create package archive
        run: |
          cd ./dist
          if [[ "${{ matrix.platform }}" == "windows-amd64" ]]; then
            zip -r xmlui-invoice-${{ matrix.platform }}.zip xmlui-invoice
          else
            tar -czf xmlui-invoice-${{ matrix.platform }}.tar.gz xmlui-invoice
          fi

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: xmlui-invoice-${{ matrix.platform }}
          path: ./dist/xmlui-invoice-${{ matrix.platform }}.*

  create-release:
    needs: create-packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./packages
          merge-multiple: false

      - name: Show downloaded structure
        run: find ./packages -type f | sort

      - name: Prepare release files folder
        run: mkdir -p ./release-files

      - name: Collect all per-platform archives
        run: |
          find ./packages -type f \( -name "*.zip" -o -name "*.tar.gz" \) -exec cp {} ./release-files/ \;

      # --- ALL-IN-ONE BUNDLE STARTS HERE ---
      - name: Create all-in-one bundle folder
        run: mkdir -p ./all-in-one-bundle/xmlui-invoice

      - name: Extract xmlui-invoice folder from one archive
        run: |
          mkdir -p ./tmp-unpack
          tar -xzf ./packages/xmlui-invoice-linux-amd64/xmlui-invoice-linux-amd64.tar.gz -C ./tmp-unpack
          cp -r ./tmp-unpack/xmlui-invoice/* ./all-in-one-bundle/xmlui-invoice/

      - name: Copy all platform server binaries
        run: |
          mkdir -p ./tmp-unpack-linux ./tmp-unpack-macos-intel ./tmp-unpack-macos-arm64 ./tmp-unpack-windows

          tar -xzf ./packages/xmlui-invoice-linux-amd64/xmlui-invoice-linux-amd64.tar.gz -C ./tmp-unpack-linux
          cp ./tmp-unpack-linux/xmlui-invoice/xmlui-test-server ./all-in-one-bundle/xmlui-test-server-linux-amd64

          tar -xzf ./packages/xmlui-invoice-macos-intel/xmlui-invoice-macos-intel.tar.gz -C ./tmp-unpack-macos-intel
          cp ./tmp-unpack-macos-intel/xmlui-invoice/xmlui-test-server ./all-in-one-bundle/xmlui-test-server-macos-intel

          tar -xzf ./packages/xmlui-invoice-macos-arm64/xmlui-invoice-macos-arm64.tar.gz -C ./tmp-unpack-macos-arm64
          cp ./tmp-unpack-macos-arm64/xmlui-invoice/xmlui-test-server ./all-in-one-bundle/xmlui-test-server-macos-arm64

          unzip ./packages/xmlui-invoice-windows-amd64/xmlui-invoice-windows-amd64.zip -d ./tmp-unpack-windows
          cp ./tmp-unpack-windows/xmlui-invoice/xmlui-test-server.exe ./all-in-one-bundle/xmlui-test-server-windows-amd64.exe

      - name: Copy all start scripts
        run: |
          cp ./start-linux.sh ./all-in-one-bundle/
          cp ./start-macos-intel.sh ./all-in-one-bundle/
          cp ./start-macos-arm64.sh ./all-in-one-bundle/
          cp ./start-windows.bat ./all-in-one-bundle/

      - name: Make start scripts executable
        run: chmod +x ./all-in-one-bundle/start-*.sh

      - name: Create all-in-one ZIP
        run: |
          cd ./all-in-one-bundle
          zip -r ../xmlui-invoice.zip .

      - name: Add all-in-one ZIP to release files
        run: mv ./xmlui-invoice.zip ./release-files/

      # --- END ALL-IN-ONE BUNDLE ---

      - name: Final release files check
        run: ls -lh ./release-files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          tag_name: ${{ github.event.inputs.tag }}
          name: Release ${{ github.event.inputs.tag }}
          files: ./release-files/*
          body: |
            XMLUI Invoice ${{ github.event.inputs.tag }}

            Includes XMLUI Test Server ${{ github.event.inputs.server_version }}

            âœ… Available packages:
            - Linux AMD64 (.tar.gz)
            - macOS Intel (.tar.gz)
            - macOS ARM64 (.tar.gz)
            - Windows AMD64 (.zip)
            - **All-in-One Bundle (xmlui-invoice.zip)**
