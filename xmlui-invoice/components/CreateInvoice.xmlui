<Component name="CreateInvoice">

  <DataSource id="clients" url="/api/clients" method="GET" />

  <DataSource id="products" url="/api/products" method="GET" />

  <Form
    id="invoiceForm"
    onCancel="invoiceForm.reset()">
    <Card>
      <H1>Create New Invoice</H1>

        <FlowLayout>

        <Card border="none" width="50%" padding="0">
          <FormItem
            type="select"
            placeholder="select client"
            bindTo="client"
            label="Client"
            required="true"
          >
            <Items data="{clients}">
              <Option value="{$item.name}" label="{$item.name}" />
            </Items>
          </FormItem>
        </Card>

        <Card border="none" width="25%" padding="0">
          <FormItem type="datePicker" dateFormat="yyyy-MM-dd" initialValue="{ formatToday() }"
            bindTo="issueDate" label="Issue date" />
        </Card>

        <Card border="none" width="25%" padding="0">
          <FormItem type="datePicker" dateFormat="yyyy-MM-dd" initialValue="{ formatToday(30) }"
            bindTo="dueDate" label="Due date" />
        </Card>

      </FlowLayout>

      <H2>Line Items</H2>
      <FlowLayout fontWeight="bold" backgroundColor="$color-surface-100" padding="$space-2">
        <Text width="20%">Product/Service</Text>
        <Text width="20%">Description</Text>
        <Text width="20%">Quantity</Text>
        <Text width="20%">Price</Text>
        <Text width="20%">Amount</Text>
      </FlowLayout>

      <FormItem
        bindTo="lineItems"
        type="items"
        id="lineItemsForm"
        required="true"
        onValidate="(value) => Array.isArray(value) && value.length > 0 && value.every(item => item.product)"
        requiredInvalidMessage="At least one line item is required."
      >
        <FlowLayout width="100%"
          verticalAlignment="center">
          <DataSource
            id="productDetails"
            url="/api/products/byname/{$item.product}"
            when="{$item.product != null}"
            method="GET"
          />
          <FormItem
            bindTo="product"
            type="select"
            placeholder="select product"
            width="20%"
          >
            <Items data="{products}">
              <Option value="{$item.name}" label="{$item.name}" />
            </Items>
          </FormItem>
          <Text width="20%">{ productDetails.value[0].description }</Text>
          <FormItem width="20%" bindTo="quantity"               type="number"   initialValue="1" minValue="1" />
          <FormItem width="20%" bindTo="price"  startText="$"                   initialValue="{ productDetails.value[0].price }" />
          <FormItem width="13%" bindTo="amount" startText="$"   enabled="false" initialValue="{ $item.price ? $item.quantity * $item.price : '' } " />
          <Button width="2rem" onClick="lineItemsForm.removeItem($itemIndex)">X</Button>

        </FlowLayout>
      </FormItem>
      <HStack>
        <Button onClick="lineItemsForm.addItem()">
          Add Item
        </Button>
        <SpaceFiller />
        <Text>
         Total: ${ window.lineItemTotal($data.lineItems) }
        </Text>
      </HStack>
    </Card>
    <event name="submit">
      <APICall
        url="/api/invoices"
        method="POST"
        inProgressNotificationMessage="Saving invoice..."
        completedNotificationMessage="Invoice saved successfully"
        body="{
          {
          client: $param.client,
          issueDate: $param.issueDate,
          dueDate: $param.dueDate,
          total: window.lineItemTotal($param.lineItems),
          items: JSON.stringify($param.lineItems || [])
          }
        }"
        onSuccess="Actions.navigate('/invoices')"
      />
    </event>

  </Form>


</Component>