<Component
  name="DailyRevenue"
  xmlns:XMLUIExtensions="component-ns"
>

   <DataSource
    id="dateRange"
    url="/api/dashboard/date-range"
    method="GET"
   />

  <VStack width="{$props.width}">
    <H1>{$props.title}</H1>

    <Fragment when="{ dateRange.value }">
      <variable name="originalStartDate" value="{ dateRange.value[0].first_invoice_date }" />
      <variable name="maxEndDate" value="{ dateRange.value[0].today }" />
      <variable name="startDate" value="{ originalStartDate }" />
      <variable name="endDate" value="{ maxEndDate }" />
      <variable name="totalDays" value="{ window.daysBetween(originalStartDate, maxEndDate)}" />

      <DataSource
        id="dailyRevenue"
        url="{ window.dailyRevenueUrl(startDate, endDate) }"
        method="GET"
      />

      <Slider
        id="slider"
        label="dateRange"
        minValue="{0}"
        maxValue="{ totalDays }"
        step="10"
        onDidChange="{
          console.log('slider values:', slider.value[0], slider.value[1]);
          // Update the start and end dates based on slider values
          startDate = window.sliderValueToDate(slider.value[0], originalStartDate);
          endDate = window.sliderValueToDate(slider.value[1], originalStartDate);
          console.log('Date range:', startDate, 'to', endDate);
        }"
        valueFormat="{ (value) => {
            const date = window.sliderValueToDate(value, originalStartDate);
            return date;
            }
        }"
      />

      <Card height="400px">
        <Fragment when="{ dailyRevenue.value }">
          <XMLUIExtensions:BarChart
            layout="horizontal"
            data="{ dailyRevenue }"
            dataKeys="{['total']}" nameKey="date"
            tickFormatter="{(value, index) => {
              if (index % 4 !== 0) return '';
              return value
            }}"
          />
        </Fragment>
      </Card>
    </Fragment>

  </VStack>

</Component>