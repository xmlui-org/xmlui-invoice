<Component name="Settings">
  <AppState id="currentUser" bucket="userState" />
  <DataSource id="users" url="/api/users"/>
  <H1>
    Settings
  </H1>
  <Card>
    <HStack>
      <H2>
        Users
      </H2>
      <SpaceFiller/>
      <Button label="Add User" onClick="Actions.navigate('/users/new')"/>
    </HStack>
    <RadioGroup
      id="userSelector"
      initialValue="{loggedInUser.username}"
      onDidChange="(val) => {
        // Find the selected user and update currentUser AppState
        const selectedUser = users.value.find(u => u.username === val);
        console.log('selectedUser', JSON.stringify(selectedUser))
        if (selectedUser) {
          currentUser.update({
            username: selectedUser.username,
            display_name: selectedUser.display_name,
            avatar_url: selectedUser.avatar_url
          });
        };
      }"
    >
      <Table data="{users}">
        <Column bindTo="username" width="*"/>
        <Column bindTo="display_name"/>
        <Column bindTo="email" width="2*" />
        <Column canSort="{false}" header="avatar">
          <InvoiceAvatar url="{$item.avatar_url}" name="{loggedInUser.display_name}" borderRadius="{currentUser.value.borderRadius}"/>
        </Column>
        <Column canSort="{false}" header="logged_in" width="*">
          <Option value="{$item.username}" />
        </Column>
      </Table>
    </RadioGroup>
  </Card>

  <Card>
    <H2>Avatar Settings</H2>
    Border radius
    <TextBox
      width="10rem"
      id="borderRadiusInput"
      placeholder="e.g. 50% or 10px"
      value="{currentUser.value.borderRadius}"
    />
    <ChangeListener
      listenTo="{borderRadiusInput.value}"
      onDidChange="{() => {
        currentUser.update({
          ...currentUser.value,
          borderRadius: borderRadiusInput.value
        });
      }}"
    />
  </Card>
</Component>
